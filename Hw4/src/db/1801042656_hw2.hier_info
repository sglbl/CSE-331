|cypher_detect
cypher[0] => cypher[0].IN1
cypher[1] => cypher[1].IN1
cypher[2] => cypher[2].IN1
cypher[3] => cypher[3].IN1
cypher[4] => cypher[4].IN1
cypher[5] => cypher[5].IN1
cypher[6] => cypher[6].IN1
cypher[7] => cypher[7].IN1
cypher[8] => cypher[8].IN1
cypher[9] => cypher[9].IN1
cypher[10] => cypher[10].IN1
cypher[11] => cypher[11].IN1
cypher[12] => cypher[12].IN1
cypher[13] => cypher[13].IN1
cypher[14] => cypher[14].IN1
cypher[15] => cypher[15].IN1
read_input_from[0] => read_input_from[0].IN1
read_input_from[1] => read_input_from[1].IN1
read_input_from[2] => read_input_from[2].IN1
read_input_from[3] => read_input_from[3].IN1
read_input => read_input.IN2
reset => reset.IN1
clk => clk.IN2
collected_signal << datapath:d0.collected_signal
result[0] << datapath:d0.result
result[1] << datapath:d0.result
result[2] << datapath:d0.result
result[3] << datapath:d0.result
result[4] << datapath:d0.result
result[5] << datapath:d0.result
result[6] << datapath:d0.result
result[7] << datapath:d0.result


|cypher_detect|datapath:d0
wr_result => reg_result[0].ENA
wr_result => reg_result[1].ENA
wr_result => reg_result[2].ENA
wr_result => reg_result[3].ENA
wr_result => reg_result[4].ENA
wr_result => reg_result[5].ENA
wr_result => reg_result[6].ENA
wr_result => reg_result[7].ENA
wr_cmatch => w_itsum[3].OUTPUTSELECT
wr_cmatch => w_itsum[2].OUTPUTSELECT
wr_cmatch => w_itsum[1].OUTPUTSELECT
wr_cmatch => w_itsum[0].OUTPUTSELECT
wr_cmatch => reg_cmatch[0].ENA
wr_cmatch => reg_cmatch[1].ENA
wr_cmatch => reg_cmatch[2].ENA
wr_cmatch => reg_cmatch[3].ENA
sl_cmatch => w_cmatch[3].OUTPUTSELECT
sl_cmatch => w_cmatch[2].OUTPUTSELECT
sl_cmatch => w_cmatch[1].OUTPUTSELECT
sl_cmatch => w_cmatch[0].OUTPUTSELECT
sl_input => w_result[7].OUTPUTSELECT
sl_input => w_result[6].OUTPUTSELECT
sl_input => w_result[5].OUTPUTSELECT
sl_input => w_result[4].OUTPUTSELECT
sl_input => w_result[3].OUTPUTSELECT
sl_input => w_result[2].OUTPUTSELECT
sl_input => w_result[1].OUTPUTSELECT
sl_input => w_result[0].OUTPUTSELECT
cypher[0] => Mux3.IN17
cypher[1] => Mux2.IN16
cypher[2] => Mux1.IN15
cypher[3] => Mux0.IN14
cypher[4] => Mux3.IN13
cypher[5] => Mux2.IN12
cypher[6] => Mux1.IN11
cypher[7] => Mux0.IN10
cypher[8] => Mux3.IN9
cypher[9] => Mux2.IN8
cypher[10] => Mux1.IN7
cypher[11] => Mux0.IN6
cypher[12] => Mux3.IN5
cypher[13] => Mux2.IN4
cypher[14] => Mux1.IN3
cypher[15] => Mux0.IN2
read_input_from[0] => Add1.IN8
read_input_from[0] => reg_read_input_from[0].DATAIN
read_input_from[1] => Add1.IN7
read_input_from[1] => reg_read_input_from[1].DATAIN
read_input_from[2] => Add1.IN6
read_input_from[2] => reg_read_input_from[2].DATAIN
read_input_from[3] => Add1.IN5
read_input_from[3] => reg_read_input_from[3].DATAIN
read_input => reg_read_input_from[0].CLK
read_input => reg_read_input_from[1].CLK
read_input => reg_read_input_from[2].CLK
read_input => reg_read_input_from[3].CLK
clk => reg_cmatch[0].CLK
clk => reg_cmatch[1].CLK
clk => reg_cmatch[2].CLK
clk => reg_cmatch[3].CLK
clk => reg_result[0].CLK
clk => reg_result[1].CLK
clk => reg_result[2].CLK
clk => reg_result[3].CLK
clk => reg_result[4].CLK
clk => reg_result[5].CLK
clk => reg_result[6].CLK
clk => reg_result[7].CLK
clk => reg_matched.CLK
matched <= reg_matched.DB_MAX_OUTPUT_PORT_TYPE
collected_signal <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
stop <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
result[0] <= reg_result[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= reg_result[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= reg_result[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= reg_result[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= reg_result[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= reg_result[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= reg_result[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= reg_result[7].DB_MAX_OUTPUT_PORT_TYPE


|cypher_detect|control:c0
wr_result <= wr_result.DB_MAX_OUTPUT_PORT_TYPE
wr_cmatch <= wr_cmatch.DB_MAX_OUTPUT_PORT_TYPE
sl_cmatch <= sl_cmatch.DB_MAX_OUTPUT_PORT_TYPE
sl_input <= sl_input.DB_MAX_OUTPUT_PORT_TYPE
read_input => ~NO_FANOUT~
matched => next_state.INC.DATAB
matched => Selector0.IN1
stop => Selector0.IN3
stop => next_state.ADD.DATAB
clk => current_state~1.DATAIN
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.OUTPUTSELECT
reset => current_state.IDLE.DATAIN


